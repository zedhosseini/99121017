#Automatically generated by Colab.

import cv2
import numpy as np
import matplotlib.pyplot as plt
from transformers import ViTFeatureExtractor, AutoModelForImageClassification
from PIL import Image
import torch

# بارگیری دسته‌بند Haar cascade برای تشخیص چهره
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# بارگیری مدل از پیش آموزش‌دیده برای تشخیص سن
age_net = cv2.dnn.readNetFromCaffe(
    'age_deploy.prototxt',
    'age_net.caffemodel'
)
age_groups = ['(0-2)', '(4-6)', '(8-12)', '(15-20)', '(25-32)', '(38-43)', '(48-53)', '(60-100)']

emotion_model_name = "SowmyaKannan/Vit-FER"
try:
    emotion_feature_extractor = ViTFeatureExtractor.from_pretrained(emotion_model_name)
    emotion_model = AutoModelForImageClassification.from_pretrained(emotion_model_name)
except Exception as e:
    print(f"Error loading model or emotion processor: {e}")
    exit()

def detect_face(img):
    img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(img_gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))
    return faces

def predict_age(face_img):
    blob = cv2.dnn.blobFromImage(face_img, 1, (227, 227), (78.4263377603, 87.7689143744, 114.5902774601), swapRB=False)
    age_net.setInput(blob)
    age_preds = age_net.forward()
    age = age_groups[age_preds[0].argmax()]
    return age

def predict_emotion(face_img_pil):
    inputs = emotion_feature_extractor(images=face_img_pil, return_tensors="pt")
    with torch.no_grad():
        outputs = emotion_model(**inputs)
        logits = outputs.logits
        predicted_class_idx = torch.argmax(logits, dim=-1).item()
        predicted_label = emotion_model.config.id2label[predicted_class_idx]
        confidence = torch.softmax(logits, dim=-1)[0][predicted_class_idx].item()
    return predicted_label, confidence

# بارگیری یک تصویر نمونه
image_path = 'sample_face.jpg'
try:
    img = cv2.imread(image_path)
    if img is None:
        import requests
        response = requests.get('https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/President_Barack_Obama.jpg/1200px-President_Barack_Obama.jpg', stream=True)
        response.raw.decode_content = True
        img_array = np.asarray(bytearray(response.raw.read()), dtype="uint8")
        img = cv2.imdecode(img_array, cv2.IMREAD_COLOR)
        image_path = 'URL'
except Exception as e:
    print(f"Error loading image: {e}")
    exit()

# تشخیص چهره در تصویر
faces = detect_face(img)
print(f"Number of faces detected: {len(faces)}")

img_with_info = img.copy()
for (x, y, w, h) in faces:
    face_cv2 = img[y:y + h, x:x + w]
    face_pil = Image.fromarray(cv2.cvtColor(face_cv2, cv2.COLOR_BGR2RGB))

    # تشخیص سن
    age = predict_age(face_cv2)
    cv2.rectangle(img_with_info, (x, y), (x + w, y + h), (0, 255, 0), 2)
    cv2.putText(img_with_info, age, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 2, cv2.LINE_AA)

    # تشخیص احساسات
    emotion, confidence = predict_emotion(face_pil)
    emotion_text = f"{emotion} ({confidence:.2f})"
    cv2.putText(img_with_info, emotion_text, (x, y - 40), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (255, 0, 0), 2, cv2.LINE_AA)

plt.imshow(cv2.cvtColor(img_with_info, cv2.COLOR_BGR2RGB))
plt.title(f"Facial recognition, age and emotions in: {image_path}")
plt.axis('off')
plt.show()